//##################################################
//#
//#           ** DO NOT EDIT THIS FILE **
//#
//##################################################
//# Version: 2023-07-04
'use strict';


module.exports = function ($elmer) {
    //# Return the middleware function
    //#     See: https://stackoverflow.com/a/51363596/235704  https://hilton.org.uk/blog/microservices-correlation-id  https://developer.walmart.com/doc/us/us-mp/us-mp-onrequestreports/
    return function (oRequest, oResponse, fnContinue) {
        let sTrace = $elmer.type.str.mk(
                $elmer.type.obj.get(oRequest.headers, "X-Request-Id") ||
                $elmer.type.obj.get(oRequest.headers, "X-Correlation-Id") ||
                $elmer.type.obj.get(oRequest.headers, "X-Trace-Id") ||
                $elmer.type.obj.get($elmer.io.web.queryString.parse(oRequest.url), "RequestId") ||
                $elmer.type.obj.get(oRequest.body, "RequestId")
            ),
            oTrace = ($elmer.type.obj.mk(sTrace, null) || { id: sTrace }),
            bIDPresent = $elmer.type.is.truthy(oTrace.id),
            sID = (bIDPresent ? oTrace.id : $elmer.type.uuid())
        ;

        //# Setup the oRequest.$trace info based on the sTrace data determined from the .headers above
        oRequest.$trace = $elmer.extend(
            {
                id: sID,
                parentid: null,
                generatedid: bIDPresent,
                sync: true,
                started: $elmer.type.date.timestamp(),
                when: $elmer.type.date.format($elmer.type.date.utcToLocalOffset(), "YYYY-MM-DD HH:mm:ss"),
                completed: null,
                runtime: 0
            },
            oTrace
        );

        //# .set the X-Request-Id information into our oResponse, then fnContinue
        oResponse.set('X-Request-Id', JSON.stringify(oRequest.$trace));
        fnContinue();
    };
}; //# module.exports
